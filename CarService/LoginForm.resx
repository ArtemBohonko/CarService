<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>